import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Form, Select, Button, Card } from 'antd';
import { PlayCircleOutlined, ArrowLeftOutlined } from '@ant-design/icons';
import { useToast } from '../contexts/ToastContext';

const { Option } = Select;

const QuizSetup = () => {
    const [form] = Form.useForm();
    const navigate = useNavigate();
    const { showSuccess, showError, showInfo } = useToast();
    const [loading, setLoading] = useState(false);

    // M·∫∑c ƒë·ªãnh hi·ªÉn th·ªã v√† kh√≥a thay ƒë·ªïi (t√≠nh nƒÉng ƒëang ph√°t tri·ªÉn)
    const defaultSubject = 'To√°n';
    const defaultGrade = 1;
    const allSubjects = ['To√°n', 'Ti·∫øng Vi·ªát', 'Khoa h·ªçc', 'L·ªãch s·ª≠', 'ƒê·ªãa l√Ω'];
    const allGrades = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];

    const handleOpenDropdown = (open) => {
        if (open) {
            showInfo('Ch·ª©c nƒÉng thay ƒë·ªïi L·ªõp/M√¥n ƒëang ph√°t tri·ªÉn');
        }
    };


    const handleSubmit = async (values) => {
        setLoading(true);
        try {
            // D√πng m·∫∑c ƒë·ªãnh l·ªõp 1, m√¥n To√°n; c√°c l·ª±a ch·ªçn kh√°c ƒëang ph√°t tri·ªÉn

            // ƒêi·ªÅu h∆∞·ªõng sang trang l√†m b√†i, trang ƒë√≥ s·∫Ω t·ª± g·ªçi generate m·ªôt l·∫ßn.
            showSuccess('B·∫Øt ƒë·∫ßu b√†i ki·ªÉm tra!');
            const tempId = `temp_${Date.now()}`;
            navigate(`/quiz/${tempId}`);
        } catch (error) {
            console.error('L·ªói ƒëi·ªÅu h∆∞·ªõng quiz:', error);
            showError('Kh√¥ng th·ªÉ b·∫Øt ƒë·∫ßu b√†i ki·ªÉm tra. Vui l√≤ng th·ª≠ l·∫°i.');
        } finally {
            setLoading(false);
        }
    };

    return (
        <div className="quiz-container">
            <Card className="setup-form">
                <h2>
                    <PlayCircleOutlined style={{ marginRight: 8, color: '#1890ff' }} />
                    Thi·∫øt l·∫≠p b√†i ki·ªÉm tra
                </h2>

                <div style={{
                    background: '#f6ffed',
                    border: '1px solid #b7eb8f',
                    borderRadius: '6px',
                    padding: '12px 16px',
                    marginBottom: '24px',
                    fontSize: '14px',
                    color: '#52c41a'
                }}>
                    <strong>üìù L∆∞u √Ω:</strong> H·ªá th·ªëng s·∫Ω t·∫°o c√¢u h·ªèi ph√π h·ª£p v·ªõi l·ªõp h·ªçc v√† m√¥n h·ªçc c·ªßa b·∫°n. Ch·ªâ b·∫Øt ƒë·∫ßu l√†m b√†i khi mu·ªën c·∫≠p nh·∫≠t ƒë√°nh gi√° nƒÉng l·ª±c h·ªçc t·∫≠p.
                </div>

                <Form
                    form={form}
                    layout="vertical"
                    onFinish={handleSubmit}
                    initialValues={{
                        grade: defaultGrade,
                        subject: defaultSubject
                    }}
                >
                    <Form.Item
                        label="L·ªõp h·ªçc"
                        name="grade"
                        rules={[{ required: true, message: 'Vui l√≤ng ch·ªçn l·ªõp h·ªçc!' }]}
                    >
                        <Select placeholder="Ch·ªçn l·ªõp h·ªçc" size="large" onDropdownVisibleChange={handleOpenDropdown}>
                            {allGrades.map(grade => (
                                <Option key={grade} value={grade} disabled={grade !== defaultGrade}>
                                    L·ªõp {grade}
                                </Option>
                            ))}
                        </Select>
                    </Form.Item>

                    <Form.Item
                        label="M√¥n h·ªçc"
                        name="subject"
                        rules={[{ required: true, message: 'Vui l√≤ng ch·ªçn m√¥n h·ªçc!' }]}
                    >
                        <Select
                            placeholder="Ch·ªçn m√¥n h·ªçc"
                            size="large"
                            onDropdownVisibleChange={handleOpenDropdown}
                        >
                            {allSubjects.map(subject => (
                                <Option key={subject} value={subject} disabled={subject !== defaultSubject}>
                                    {subject}
                                </Option>
                            ))}
                        </Select>
                    </Form.Item>


                    <Form.Item>
                        <Button
                            type="primary"
                            htmlType="submit"
                            size="large"
                            className="start-quiz-btn"
                            loading={loading}
                            icon={<PlayCircleOutlined />}
                            block
                        >
                            {loading ? 'ƒêang t·∫°o b√†i ki·ªÉm tra...' : 'B·∫Øt ƒë·∫ßu l√†m b√†i'}
                        </Button>
                    </Form.Item>

                    <Form.Item style={{ marginBottom: 0 }}>
                        <Button
                            icon={<ArrowLeftOutlined />}
                            onClick={() => navigate('/')}
                            danger
                            type="primary"
                            size="large"
                            block
                        >
                            Quay l·∫°i trang ch·ªß
                        </Button>
                    </Form.Item>
                </Form>
            </Card>
        </div>
    );
};

export default QuizSetup;
